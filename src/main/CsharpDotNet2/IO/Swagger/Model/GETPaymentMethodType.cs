using System;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Model {

  /// <summary>
  /// 
  /// </summary>
  [DataContract]
  public class GETPaymentMethodType {
    /// <summary>
    /// Gets or Sets CardHolderInfo
    /// </summary>
    [DataMember(Name="cardHolderInfo", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "cardHolderInfo")]
    public GETPaymentMethodTypeCardHolderInfo CardHolderInfo { get; set; }

    /// <summary>
    /// Credit or debit card number, 16 characters or less, masked for security purposes. 
    /// </summary>
    /// <value>Credit or debit card number, 16 characters or less, masked for security purposes. </value>
    [DataMember(Name="cardNumber", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "cardNumber")]
    public string CardNumber { get; set; }

    /// <summary>
    /// The type of credit card or debit card being billed.  Possible values are: `Visa`, `MasterCard`, `AmericanExpress`, `Discover`. 
    /// </summary>
    /// <value>The type of credit card or debit card being billed.  Possible values are: `Visa`, `MasterCard`, `AmericanExpress`, `Discover`. </value>
    [DataMember(Name="cardType", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "cardType")]
    public string CardType { get; set; }

    /// <summary>
    /// Contains true if this is the default payment method for this customer, otherwise false. 
    /// </summary>
    /// <value>Contains true if this is the default payment method for this customer, otherwise false. </value>
    [DataMember(Name="defaultPaymentMethod", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "defaultPaymentMethod")]
    public bool? DefaultPaymentMethod { get; set; }

    /// <summary>
    /// Two-digit expiration month (01 - 12). 
    /// </summary>
    /// <value>Two-digit expiration month (01 - 12). </value>
    [DataMember(Name="expirationMonth", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "expirationMonth")]
    public string ExpirationMonth { get; set; }

    /// <summary>
    /// Four-digit expiration year. 
    /// </summary>
    /// <value>Four-digit expiration year. </value>
    [DataMember(Name="expirationYear", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "expirationYear")]
    public string ExpirationYear { get; set; }

    /// <summary>
    /// Unique ID generated by Zuora when this payment method was created. 
    /// </summary>
    /// <value>Unique ID generated by Zuora when this payment method was created. </value>
    [DataMember(Name="id", EmitDefaultValue=false)]
    [JsonProperty(PropertyName = "id")]
    public string Id { get; set; }


    /// <summary>
    /// Get the string presentation of the object
    /// </summary>
    /// <returns>String presentation of the object</returns>
    public override string ToString()  {
      var sb = new StringBuilder();
      sb.Append("class GETPaymentMethodType {\n");
      sb.Append("  CardHolderInfo: ").Append(CardHolderInfo).Append("\n");
      sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
      sb.Append("  CardType: ").Append(CardType).Append("\n");
      sb.Append("  DefaultPaymentMethod: ").Append(DefaultPaymentMethod).Append("\n");
      sb.Append("  ExpirationMonth: ").Append(ExpirationMonth).Append("\n");
      sb.Append("  ExpirationYear: ").Append(ExpirationYear).Append("\n");
      sb.Append("  Id: ").Append(Id).Append("\n");
      sb.Append("}\n");
      return sb.ToString();
    }

    /// <summary>
    /// Get the JSON string presentation of the object
    /// </summary>
    /// <returns>JSON string presentation of the object</returns>
    public string ToJson() {
      return JsonConvert.SerializeObject(this, Formatting.Indented);
    }

}
}
